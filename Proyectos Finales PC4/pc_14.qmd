---
title: "pc_14"
format: html
editor: visual
---

## PRACTICA CALIFICADA 14

**Alumna: Deborah Geraldine Cespedes Gonzales**

#### **INSTALAR Y CARGAR PAQUETES**

```{r}
install.packages("mice")
install.packages("ggmice")
```

```{r}
library(mice)
library(tidyverse)
library(here)
library(rio)
library(ggmice)
library(gtsummary)
```

#### **CARGAR DATASET** 

```{r}
data_sm <- import(here("data", "cirrosis.csv"))
```

#### VISTAZO A LOS DATOS

```{r}
head(data_sm)
`
```

#### 1. REALIZAMOS LA IMPUTACION DE DATOS

#### **1.1 VERIFICAMOS SI HAY VALORES PERDIDOS**

```{r}
colSums(is.na(data_sm))
```

-   **Incluso mejor, podemos visualizar los datos perdidos en un mapa de calor usando la función `plot_pattern()` de ggmice.**

```{r}
data_sm |>
  select(
    Estado,
    Dias_Seguimiento,
    Medicamento, 
    Edad, 
    Sexo, 
    Ascitis, 
    Hepatomegalia, 
    Aracnoides, 
    Edema, 
    Bilirrubina, 
    Colesterol,
    Albumina, 
    Cobre, 
    Fosfatasa_Alcalina,
    SGOT, 
    Trigliceridos, 
    Plaquetas,
    Tiempo_Protrombina,
    Etapa
    ) |>
  ggmice::plot_pattern(
    square = TRUE,
    rotate = TRUE
  )
```

El número total de valores perdidos en el dataset data_sm es de 1033. Las variables **`Tiempo_protrombina`** (2), **`Etapa`** (6), **`Plaquetas`** (11), **`Medicamento`** (106), **`Ascitis`**(106), **`Hepatomegalia`**(106), **`Aracnoides`**(106), **`Fosfatasa_Alcalina`**(106), **`SGOT`**(106), **`Cobre`**(108), **`Colesterol`**(134), **`Trigliceridos`**(136) tienen respectivamente valores perdidos. Hay **`28`** pacientes quienes tienen valores perdidos en **dos variables**, **`91`** en **nueve variables** y **`15`** en **diez variables.**

#### **1.2**  **COMPARACION DE PARTICIPANTES CON Y SIN VALORES PERDIDOS**

```{r}
tabla_Colesterol = data_sm |> 
  dplyr::select(
    Estado,
    Dias_Seguimiento,
    Medicamento, 
    Edad, 
    Sexo, 
    Ascitis, 
    Hepatomegalia, 
    Aracnoides, 
    Edema, 
    Bilirrubina, 
    Colesterol,
    Albumina, 
    Cobre, 
    Fosfatasa_Alcalina,
    SGOT, 
    Trigliceridos, 
    Plaquetas,
    Tiempo_Protrombina,
    Etapa
    ) |>
  mutate(missing = factor(
    is.na(Colesterol),
    levels = c(FALSE, TRUE),
    labels = c("Sin valores perdidos", "Con valores perdidos")
  )) |> 
  tbl_summary(
    by = missing,
    statistic = list(
      all_continuous()  ~ "{mean} ({sd})",
      all_categorical() ~ "{n}    ({p}%)")
    ) |> 
  modify_header(label = "**Variable**",
                all_stat_cols() ~ "**{level}**<br>N = {n} ({style_percent(p, digits=1)}%)") |> 
  modify_caption("Características de los participantes segun valor perdido") |> 
  bold_labels()

tabla_Trigliceridos = data_sm |> 
  dplyr::select(
      Estado,
    Dias_Seguimiento,
    Medicamento, 
    Edad, 
    Sexo, 
    Ascitis, 
    Hepatomegalia, 
    Aracnoides, 
    Edema, 
    Bilirrubina, 
    Colesterol,
    Albumina, 
    Cobre, 
    Fosfatasa_Alcalina,
    SGOT, 
    Trigliceridos, 
    Plaquetas,
    Tiempo_Protrombina,
    Etapa
    ) |>
  mutate(missing = factor(
    is.na(Trigliceridos),
    levels = c(FALSE, TRUE),
    labels = c("Sin valores perdidos", "Con valores perdidos")
  )) |> 
  tbl_summary(
    by = missing,
    statistic = list(
      all_continuous()  ~ "{mean} ({sd})",
      all_categorical() ~ "{n}    ({p}%)")
    ) |> 
  modify_header(label = "**Variable**",
                all_stat_cols() ~ "**{level}**<br>N = {n} ({style_percent(p, digits=1)}%)") |> 
  modify_caption("Características de los participantes segun valor perdido") |> 
  bold_labels()

tabla <- tbl_merge(
  tbls = list(tabla_Colesterol, tabla_Trigliceridos),
  tab_spanner = c("**Colesterol**", "**Trigliceridos**")
)
```

```{r}
tabla
```

**Nota que el promedio y desviación estandard, para algunas variables, varían en la comparación del grupo con variables perdidas y completas.**

#### **1.3 ¿QUÉ VARIABLES DEBO INCLUIR EN EL PROCESO DE IMPUTACIÓN?**

Usare la variable categorica **`Estado`,** útil para modelos de supervivencia o clasificación.

-   Indica si el paciente fue **fallecido**, **censurado** o **trasplantado**.

```{r}
input_data =
  data_sm |>
    dplyr::select(
      Estado,
    Dias_Seguimiento,
    Medicamento, 
    Edad, 
    Sexo, 
    Ascitis, 
    Hepatomegalia, 
    Aracnoides, 
    Edema, 
    Bilirrubina, 
    Colesterol,
    Albumina, 
    Cobre, 
    Fosfatasa_Alcalina,
    SGOT, 
    Trigliceridos, 
    Plaquetas,
    Tiempo_Protrombina,
    Etapa
    ) |> 
  mutate(Estado = as.factor(Estado))
```

#### **1.4 LA FUNCIÓN ¨mice()¨ PARA IMPUTAR DATOS**

Cabe recalcar que el conjunto de datos contiene 19 variables, de las cuales 12 presentan valores perdidos, y las variables se encuentran en el siguiente orden.

```{r}
names(input_data)
```

El método de imputación la indicaremos con el argumento `method` en el mismo orden que aparecen las variables en el dataset.

Emplearemos el método `"pmm"` para variables continuas y `"logreg"` para variables binarias. Para las variables que **no presentan valores perdidos**, simplemente se colocan comillas vacías (`""`).

```{r}
data_imputada =
  mice(
    input_data,
    m = 20,
    method = c(
      "",
      "",
      "pmm",
      "",
      "",
      "pmm",
      "pmm",
      "pmm",
      "",
      "",
      "pmm",
      "",
      "pmm",
      "pmm",
      "pmm",
      "pmm",
      "pmm",
      "pmm",
      "pmm"),
    maxit = 20,
    seed = 3,
    print = F
    )
```

```{r}
data_imputada
```

El resultado de la imputación se ha guardado en el objeto data_imputada y muestra que es un objeto de clase mids (multiply imputed dataset), el número de imputaciones (20), el método de imputación para todas las variables, y en una matriz, cuales variables han sido usadas para predecir otras.

#### **2. ANALIZANDO LOS DATOS IMPUTADOS**

2.  Antes de realizar análisis adicionales al dataset imputado, es necesario explorar los datos imputados. Idealmente, los valores imputados deben ser plausibles en comparación con los valores observados. Podemos observar esto en un gráfico de cajas y bigotes de la distribución de los datos imputados (20) versus los datos sin imputar.

    Para la variable Colesterol

```{r}
ggmice(data_imputada, aes(x = .imp, y = Colesterol)) +
  geom_jitter(height = 0, width = 0.25) +
  geom_boxplot(width = 0.5, size = 1, alpha = 0.55, outlier.shape = NA) +
  labs(x = "Imputation number")
```

Para la variable Trigliceridos

```{r}
ggmice(data_imputada, aes(x = .imp, y = Trigliceridos)) +
  geom_jitter(height = 0, width = 0.25) +
  geom_boxplot(width = 0.5, size = 1, alpha = 0.55, outlier.shape = NA) +
  labs(x = "Imputation number")
```

Con esta función, los datos observados se encuentran al inicio (azul), y los demás boxplots corresponden a los datos imputados (20). Para ambos casos, los datos imputados estan dentro del rango de los valores observados, son plausibles.

Para datos categóricos, podemos crear una tabla de dos entradas comparando la distribución de la variable con datos completos e incompletos. Esto requiere primero crear la versión "long" de la data imputada.

```{r}
data_imputada_l <- complete(data_imputada, "long", include = TRUE)
```

Ahora la tabla.

```{r}
data_imputada_l <- data_imputada_l %>% 
  mutate(imputed = .imp > 0,
         imputed = factor(imputed,
                          levels = c(F,T),
                          labels = c("Observado", "Imputado")))

prop.table(table(data_imputada_l$Estado,
                 data_imputada_l$imputed),
           margin = 2)
```

Idealmente los dos primero número luego del decimal, debe ser similares entre datos observados e imputados.

#### **2.1 PROCEDIMIENTOS ADICIONALES LUEGO DE LA IMPUTACIÓN**

```{r}

tabla_multi <-
  data_imputada |> 
  with(glm(Estado ~ Dias_Seguimiento + Medicamento + Edad + Sexo + Ascitis + Hepatomegalia + Aracnoides + Edema + Bilirrubina + Colesterol + Albumina + Cobre + Fosfatasa_Alcalina + SGOT + Trigliceridos + Plaquetas + Tiempo_Protrombina + Etapa,
           family = binomial(link = "logit"))) |> 
  tbl_regression(exponentiate = TRUE,
                 label = list(
                   Dias_Seguimiento ~ "Días de Seguimiento",
  Medicamento ~ "Medicamento administrado",
  Edad ~ "Edad del paciente",
  Sexo ~ "Sexo",
  Ascitis ~ "Presencia de ascitis",
  Hepatomegalia ~ "Hepatomegalia",
  Aracnoides ~ "Arañas vasculares",
  Edema ~ "Edema periférico",
  Bilirrubina ~ "Bilirrubina total",
  Colesterol ~ "Colesterol",
  Albumina ~ "Albúmina",
  Cobre ~ "Cobre sérico",
  Fosfatasa_Alcalina ~ "Fosfatasa alcalina",
  SGOT ~ "SGOT (AST)",
  Trigliceridos ~ "Triglicéridos",
  Plaquetas ~ "Recuento de plaquetas",
  Tiempo_Protrombina ~ "Tiempo de protrombina",
  Etapa ~ "Etapa clínica")) |>
  bold_p(t = 0.05) |>
  modify_header(estimate = "**OR ajustado**", p.value = "**p valor** ")
```

```{r}
tabla_multi
```
